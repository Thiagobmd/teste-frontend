{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.scss","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.scss","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.scss","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.scss","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/pipes/filter-by-prof.pipe.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- app.component.html -->\\r\\n<ng2-slim-loading-bar color=\\\"blue\\\"></ng2-slim-loading-bar>\\r\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"create\\\" class=\\\"btn btn-primary\\\" routerLinkActive=\\\"active\\\">\\r\\n            <fa name=\\\"plus\\\"></fa>  Novo\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"index\\\" class=\\\"btn btn-warning\\\" routerLinkActive=\\\"active\\\">\\r\\n            <fa name=\\\"th-list\\\"></fa> Ver Todos\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"btn btn-success\\\" (click)=\\\"open(content)\\\" routerLinkActive=\\\"active\\\">\\r\\n            <fa name=\\\"search\\\"></fa> Buscar</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n<ng-template #content let-ca=\\\"close('a')\\\" let-cb=\\\"close('b')\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"ca\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <app-search></app-search>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-dark botao-fechar-modal\\\" (click)=\\\"cb\\\"><fa name=\\\"times-circle\\\"></fa> Fechar</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","module.exports = \"\"","// app.component.ts\r\n\r\nimport { Component } from '@angular/core';\r\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NavigationCancel,\r\n  Event,\r\n  NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  closeResult: string;\r\n\r\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router, private modalService: NgbModal) {\r\n    // AO MUDAR DE ROTA CHAMA O LOADER\r\n    this._router.events.subscribe((event: Event) => {\r\n      this.navigationInterceptor(event);\r\n    });\r\n  }\r\n  // LOADER HORIZONTAL\r\n  private navigationInterceptor(event: Event): void {\r\n    if (event instanceof NavigationStart) {\r\n      this._loadingBar.start();\r\n    }\r\n    if (event instanceof NavigationEnd) {\r\n      this._loadingBar.complete();\r\n    }\r\n    if (event instanceof NavigationCancel) {\r\n      this._loadingBar.stop();\r\n    }\r\n    if (event instanceof NavigationError) {\r\n      this._loadingBar.stop();\r\n    }\r\n  }\r\n\r\n  // ABRE MODAL BOOTSTRAP\r\n  open(content) {\r\n    this.modalService.open(content, { backdropClass: 'fade' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  // INFORMA POR ONDE FOI FECHADO A MODAL, PELA TECLA ESC, SE FOI CLICADO FORA E ETC...\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return  `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n","// app.module.ts\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\nimport * as $ from 'jquery';\r\n\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\n\r\nimport { ApiService } from './services/api.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CreateComponent } from './components/create/create.component';\r\nimport { IndexComponent } from './components/index/index.component';\r\nimport { EditComponent } from './components/edit/edit.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { FilterByProfPipe } from './pipes/filter-by-prof.pipe';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: IndexComponent\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: CreateComponent\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: EditComponent\r\n  },\r\n  {\r\n    path: 'index',\r\n    component: IndexComponent\r\n  },\r\n  {\r\n    path: 'search',\r\n    component: SearchComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CreateComponent,\r\n    IndexComponent,\r\n    EditComponent,\r\n    SearchComponent,\r\n    FilterByProfPipe\r\n  ],\r\n  imports: [\r\n    FilterPipeModule,\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes),\r\n    SlimLoadingBarModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule.forRoot(),\r\n    AngularFontAwesomeModule\r\n  ],\r\n  providers: [ ApiService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<!-- create.component.html -->\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"nome\\\">Nome: </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" formControlName=\\\"nome\\\" #nome />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['nome'].invalid && (angForm.controls['nome'].dirty || angForm.controls['nome'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['nome'].errors.required\\\">\\n              Nome é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"sobrenome\\\">Sobrenome: </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sobrenome\\\" formControlName=\\\"sobrenome\\\" #sobrenome />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['sobrenome'].invalid && (angForm.controls['sobrenome'].dirty || angForm.controls['sobrenome'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['sobrenome'].errors.required\\\">\\n              Sobrenome é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"email\\\">Email: </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" formControlName=\\\"email\\\" #email pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,6})+$\\\"\\n            />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n              Email é obrigatório.\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['email'].errors && angForm.controls['email'].errors.pattern\\\">\\n              Email é inválido\\n            </div>\\n          </div>\\n          </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"sexo\\\">Sexo: </label>\\n            <select class=\\\"form-control\\\" name=\\\"sexo\\\" formControlName=\\\"sexo\\\" #sexo>\\n              <option value=\\\"Masculino\\\">Masculino</option>\\n              <option value=\\\"Feminino\\\">Feminino</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"datacriacao\\\">Data do Cadastro: </label>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"datacriacao\\\" formControlName=\\\"datacriacao\\\" #datacriacao />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['datacriacao'].invalid && (angForm.controls['datacriacao'].dirty || angForm.controls['datacriacao'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['datacriacao'].errors.required\\\">\\n              Data de Criação é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"selectedEstado\\\">Estado: </label>\\n            <select class=\\\"form-control\\\" id=\\\"selectedEstado\\\" (change)=\\\"onSelectEstado($event.target.value)\\\" name=\\\"selectedEstado\\\" formControlName=\\\"selectedEstado\\\"\\n              #selectedEstado>\\n              <option value=\\\"0\\\">Selecione o Estado</option>\\n              <option *ngFor=\\\"let estado of getEstados()\\\" value={{estado.id}}>{{estado.name}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"selectedCidade\\\">Cidade: </label>\\n            <select class=\\\"form-control\\\" id=\\\"selectedCidade\\\" name=\\\"selectedCidade\\\" formControlName=\\\"selectedCidade\\\" #selectedCidade>\\n              <option value=\\\"0\\\">Selecione a Cidade</option>\\n              <option *ngFor=\\\"let cidade of cidades\\\" value={{cidade.id}}>{{cidade.name}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"areaformacao\\\">Área de Formação: </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"areaformacao\\\" formControlName=\\\"areaformacao\\\" #areaformacao />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['areaformacao'].invalid && (angForm.controls['areaformacao'].dirty || angForm.controls['areaformacao'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['areaformacao'].errors.required\\\">\\n              Área de Formação é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"profissao\\\">Profissão: </label>\\n            <select class=\\\"form-control\\\" name=\\\"profissao\\\" formControlName=\\\"profissao\\\" #profissao>\\n              <option value=\\\"Advogado\\\">Advogado</option>\\n              <option value=\\\"Bombeiro\\\">Bombeiro</option>\\n              <option value=\\\"Médico\\\">Médico</option>\\n              <option value=\\\"Programador\\\">Programador</option>\\n              <option value=\\\"Zelador\\\">Zelador</option>\\n            </select>\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['profissao'].invalid && (angForm.controls['profissao'].dirty || angForm.controls['profissao'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['profissao'].errors.required\\\">\\n              Profissão é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n          <div class=\\\"form-group pull-right\\\">\\n            <button (click)=\\\"addProf(nome.value, sobrenome.value, email.value, sexo.value, datacriacao.value, selectedEstado.value, selectedCidade.value, areaformacao.value, profissao.value)\\\"\\n              [disabled]=\\\"angForm.controls['nome'].invalid || angForm.controls['sobrenome'].invalid || angForm.controls['email'].invalid || angForm.controls['datacriacao'].invalid || angForm.controls['areaformacao'].invalid || angForm.controls['profissao'].invalid\\\"\\n              class=\\\"btn btn-primary btn-lg\\\"><fa name=\\\"save\\\"></fa> Salvar</button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","// create.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n\n  closeResult: string;\n  angForm: FormGroup;\n  selectedEstado = 0;\n  selectedCidade = 0;\n  estados = [];\n  cidades = [];\n  cidadeNome: any;\n  estadoNome: any;\n\n  constructor(private apiservice: ApiService, private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  // CONFORME ESTADO SELECIONADO FILTRA O ARRAY COM A LISTA DE CIDADES\n  onSelectEstado(estado_id: number) {\n    this.selectedEstado = estado_id;\n    this.cidades = this.getCidades().filter((item) => {\n      return item.estado_id === Number(estado_id);\n    });\n  }\n\n  // LISTA DE ESTADOS\n  getEstados() {\n    return [\n      { id: 1, name: 'Paraná' },\n      { id: 2, name: 'Santa Catarina' },\n      { id: 3, name: 'Bahia' }\n    ];\n  }\n\n  // LISTA DE CIDADES\n  getCidades() {\n    return [\n      { id: 1, estado_id: 1, name: 'Cianorte' },\n      { id: 2, estado_id: 1, name: 'Maringá' },\n      { id: 3, estado_id: 1, name: 'Curitiba' },\n      { id: 4, estado_id: 1, name: 'Japurá' },\n      { id: 5, estado_id: 2, name: 'Florianópolis' },\n      { id: 6, estado_id: 2, name: 'Chapecó' },\n      { id: 7, estado_id: 3, name: 'Salvador' },\n      { id: 8, estado_id: 3, name: 'Porto Seguro' },\n      { id: 9, estado_id: 3, name: 'Juazeiro' }\n    ];\n  }\n\n  // CRIAÇÃO DO FORMULÁRIO\n  createForm() {\n    this.angForm = this.fb.group({\n      nome: ['', Validators.required ],\n      sobrenome: ['', Validators.required ],\n      email: ['', Validators.required ],\n      sexo: [''],\n      datacriacao: ['', Validators.required ],\n      selectedEstado: [''],\n      selectedCidade: [''],\n      areaformacao: ['', Validators.required ],\n      profissao: ['', Validators.required ]\n  });\n  }\n\n  // CRIA UM NOVO REGISTRO\n  addProf(nome, sobrenome, email, sexo, datacriacao, estadoid, cidadeid, areaformacao, profissao) {\n      // AQUI FILTRO CONFORME O ID DO ESTADO E PEGO A LINHA CORRESPONDENTE\n      this.estadoNome = this.getEstados().filter((item) => {\n        return item.id === Number(estadoid);\n      });\n\n      // AQUI FILTRO CONFORME O ID DA CIDADE E PEGO A LINHA CORRESPONDENTE\n      this.cidadeNome = this.getCidades().filter((item) => {\n        return item.id === Number(cidadeid);\n      });\n\n      // VALIDAÇÃO CASO NÃO SEJA ESCOLHIDO NENHUM ESTADO\n      if (this.estadoNome.length === 0) {\n        this.estadoNome = '';\n        estadoid = 0;\n      } else {\n        this.estadoNome = this.estadoNome[0].name;\n      }\n\n      // VALIDAÇÃO CASO NÃO SEJA ESCOLHIDO NENHUMA CIDADE\n      if (this.cidadeNome.length === 0) {\n        this.cidadeNome = '';\n        cidadeid = 0;\n      } else {\n        this.cidadeNome = this.cidadeNome[0].name;\n      }\n\n      // CHAMO O SERVICE.METODO QUE IRA FAZER O NOVO CADASTRO DO PROFISISONAL\n      this\n      .apiservice\n      .addProfissional(\n        nome,\n        sobrenome,\n        email,\n        sexo,\n        datacriacao,\n        estadoid,\n        this.estadoNome,\n        cidadeid,\n        this.cidadeNome,\n        areaformacao,\n        profissao);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- edit.component.html -->\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"nome\\\">Nome: </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" formControlName=\\\"nome\\\" #nome [(ngModel)]=\\\"apiDados.nome\\\" />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['nome'].invalid && (angForm.controls['nome'].dirty || angForm.controls['nome'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['nome'].errors.required\\\">\\n              Nome é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"sobrenome\\\">Sobrenome: </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sobrenome\\\" formControlName=\\\"sobrenome\\\" #sobrenome [(ngModel)]=\\\"apiDados.sobrenome\\\"\\n            />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['sobrenome'].invalid && (angForm.controls['sobrenome'].dirty || angForm.controls['sobrenome'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['sobrenome'].errors.required\\\">\\n              Sobrenome é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"email\\\">Email: </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" formControlName=\\\"email\\\" #email [(ngModel)]=\\\"apiDados.email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,6})+$\\\"\\n            />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n              Email é obrigatório.\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['email'].errors && angForm.controls['email'].errors.pattern\\\">\\n              Email é inválido\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"sexo\\\">Sexo: </label>\\n            <select class=\\\"form-control\\\" name=\\\"sexo\\\" formControlName=\\\"sexo\\\" #sexo [(ngModel)]=\\\"apiDados.sexo\\\">\\n              <option value=\\\"Masculino\\\">Masculino</option>\\n              <option value=\\\"Feminino\\\">Feminino</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"datacriacao\\\">Data do Cadastro: </label>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"datacriacao\\\" formControlName=\\\"datacriacao\\\" #datacriacao [(ngModel)]=\\\"apiDados.datacriacao\\\"\\n            />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['datacriacao'].invalid && (angForm.controls['datacriacao'].dirty || angForm.controls['datacriacao'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['datacriacao'].errors.required\\\">\\n              Data de Criação é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"Estados\\\">Estado: </label>\\n            <select class=\\\"form-control\\\" id=\\\"estados\\\" (change)=\\\"onSelectEstado($event.target.value)\\\" name=\\\"selectedEstado\\\" formControlName=\\\"selectedEstado\\\"\\n              #selectedEstado [(ngModel)]=\\\"apiDados.estadoid\\\">\\n              <option value=\\\"0\\\">Selecione o Estado</option>\\n              <option *ngFor=\\\"let estado of getEstados()\\\" value={{estado.id}}>{{estado.name}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"Cidades\\\">Cidade: </label>\\n            <select class=\\\"form-control\\\" id=\\\"cidades\\\" name=\\\"selectedCidade\\\" formControlName=\\\"selectedCidade\\\" #selectedCidade [(ngModel)]=\\\"apiDados.cidadeid\\\">\\n              <option value=\\\"0\\\">Selecione a Cidade</option>\\n              <option *ngFor=\\\"let cidade of cidades\\\" value={{cidade.id}}>{{cidade.name}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"areaformacao\\\">Área de Formação: </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"areaformacao\\\" formControlName=\\\"areaformacao\\\" #areaformacao [(ngModel)]=\\\"apiDados.areaformacao\\\"\\n            />\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['areaformacao'].invalid && (angForm.controls['areaformacao'].dirty || angForm.controls['areaformacao'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['areaformacao'].errors.required\\\">\\n              Área de Formação é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-4\\\">\\n          <div class=\\\"form-group required\\\">\\n            <label class=\\\"control-label\\\" for=\\\"profissao\\\">Profissão: </label>\\n            <select class=\\\"form-control\\\" name=\\\"profissao\\\" formControlName=\\\"profissao\\\" #profissao [(ngModel)]=\\\"apiDados.profissao\\\">\\n              <option value=\\\"Advogado\\\">Advogado</option>\\n              <option value=\\\"Bombeiro\\\">Bombeiro</option>\\n              <option value=\\\"Médico\\\">Médico</option>\\n              <option value=\\\"Programador\\\">Programador</option>\\n              <option value=\\\"Zelador\\\">Zelador</option>\\n            </select>\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['profissao'].invalid && (angForm.controls['profissao'].dirty || angForm.controls['profissao'].touched)\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['profissao'].errors.required\\\">\\n              Profissão é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n          <div class=\\\"form-group pull-right\\\">\\n            <button (click)=\\\"UpdateProf(nome.value, sobrenome.value, email.value, sexo.value, datacriacao.value, selectedEstado.value, selectedCidade.value, areaformacao.value, profissao.value)\\\"\\n              [disabled]=\\\"angForm.controls['nome'].invalid || angForm.controls['sobrenome'].invalid || angForm.controls['email'].invalid || angForm.controls['datacriacao'].invalid || angForm.controls['areaformacao'].invalid || angForm.controls['profissao'].invalid\\\"\\n              class=\\\"btn btn-primary btn-lg\\\"><fa name=\\\"save\\\"></fa> Atualizar</button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","// edit.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit {\n\n  apiDados: any = [];\n  angForm: FormGroup;\n  selectedEstado = 0;\n  selectedCidade = 0;\n  estados = [];\n  cidades = [];\n  cidadeNome: any;\n  estadoNome: any;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private route: ActivatedRoute,\n    private router: Router,\n    private apiservice: ApiService,\n    private fb: FormBuilder) {\n      // INICIO CRIANDO O FORMULARIO DE EDIÇÃO\n      this.createForm();\n    }\n\n  // CONFORME ESTADO SELECIONADO FILTRA A LISTA DE CIDADES\n  onSelectEstado(estado_id: number) {\n    this.selectedEstado = estado_id;\n    this.cidades = this.getCidades().filter((item) => {\n      return item.estado_id === Number(estado_id);\n    });\n  }\n\n  // LISTA DE ESTADOS\n  getEstados() {\n    return [\n      { id: 1, name: 'Paraná' },\n      { id: 2, name: 'Santa Catarina' },\n      { id: 3, name: 'Bahia' }\n    ];\n  }\n\n  // LISTA DE CIDADES\n  getCidades() {\n    return [\n      { id: 1, estado_id: 1, name: 'Cianorte' },\n      { id: 2, estado_id: 1, name: 'Maringá' },\n      { id: 3, estado_id: 1, name: 'Curitiba' },\n      { id: 4, estado_id: 1, name: 'Japurá' },\n      { id: 5, estado_id: 2, name: 'Florianópolis' },\n      { id: 6, estado_id: 2, name: 'Chapecó' },\n      { id: 7, estado_id: 3, name: 'Salvador' },\n      { id: 8, estado_id: 3, name: 'Porto Seguro' },\n      { id: 9, estado_id: 3, name: 'Juazeiro' }\n    ];\n  }\n\n  // CRIAÇÃO DO FORMULÁRIO\n    createForm() {\n      this.angForm = this.fb.group({\n        nome: ['', Validators.required ],\n        sobrenome: ['', Validators.required ],\n        email: ['', Validators.required ],\n        sexo: [''],\n        datacriacao: ['', Validators.required ],\n        selectedEstado: [''],\n        selectedCidade: [''],\n        areaformacao: ['', Validators.required ],\n        profissao: ['', Validators.required ]\n    });\n    }\n\n    public ngOnInit() {\n\n    // CASO RECEBA NA URL O PARAMETRO modal=true EU FECHO A MODAL VIA JQUERY\n    this.activatedRoute.params.subscribe(params => {\n        if (params['modal'] === 'true') {\n          $('.botao-fechar-modal').click();\n        }\n    });\n\n      // ACESSO A API E TRAGO OS DADOS DO PROFISSIONAL EM QUESTÃO\n      this.route.params.subscribe(params => {\n        this.apiservice.editProfissional(params['id']).subscribe(res => {\n          this.apiDados = res;\n          this.selectedEstado = this.apiDados.estadoid;\n          // FILTRO PARA SETAR A CIDADE DO PROFISSIONAL EM QUESTÃO CONFORME O ID DO ESTADO\n          this.cidades = this.getCidades().filter((item) => {\n            return item.estado_id === Number(this.selectedEstado);\n          });\n      });\n    });\n  }\n\n  // UPDATE DOS DADOS DO PROFISSIONAL EM QUESTÃO\n  UpdateProf(nome, sobrenome, email, sexo, datacriacao, estadoid, cidadeid, areaformacao, profissao) {\n    this.route.params.subscribe(params => {\n      // FILTRO CONFORME O ID DO ESTADO E PEGO A LINHA CORRESPONDENTE\n      this.estadoNome = this.getEstados().filter((item) => {\n        return item.id === Number(estadoid);\n      });\n\n      // FILTRO CONFORME O ID DA CIDADE E PEGO A LINHA CORRESPONDENTE\n      this.cidadeNome = this.getCidades().filter((item) => {\n        return item.id === Number(cidadeid);\n      });\n\n      // VALIDAÇÃO CASO NÃO SEJA ESCOLHIDO NENHUM ESTADO\n      if (this.estadoNome.length === 0) {\n        this.estadoNome = '';\n        estadoid = 0;\n      } else {\n        this.estadoNome = this.estadoNome[0].name;\n      }\n\n      // VALIDAÇÃO CASO NÃO SEJA ESCOLHIDO NENHUMA CIDADE\n      if (this.cidadeNome.length === 0) {\n        this.cidadeNome = '';\n        cidadeid = 0;\n      } else {\n        this.cidadeNome = this.cidadeNome[0].name;\n      }\n\n      // CHAMA O SERVICE.METODO QUE IRA ATUALIZAR O CADASTRO DO PROFISISONAL\n      this\n      .apiservice\n      .updateProfissional(\n        nome,\n        sobrenome,\n        email,\n        sexo,\n        datacriacao,\n        estadoid,\n        this.estadoNome,\n        cidadeid,\n        this.cidadeNome,\n        areaformacao,\n        profissao,\n        params['id']\n      );\n\n    });\n}\n\n}\n","module.exports = \"<!-- index.component.html -->\\n\\n<div class=\\\"table-responsive table-hover\\\">\\n  <table class=\\\"table\\\" width=\\\"100%\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">ID</th>\\n        <th scope=\\\"col\\\">Nome</th>\\n        <th scope=\\\"col\\\">Sobrenome</th>\\n        <th scope=\\\"col\\\">Email</th>\\n        <th scope=\\\"col\\\">Sexo</th>\\n        <th scope=\\\"col\\\">Data</th>\\n        <th scope=\\\"col\\\">Estado</th>\\n        <th scope=\\\"col\\\">Cidade</th>\\n        <th scope=\\\"col\\\">Área de Formação</th>\\n        <th scope=\\\"col\\\">Profissão</th>\\n        <th scope=\\\"col\\\" colspan=\\\"2\\\">Ações</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr *ngFor=\\\"let prof of listaProf\\\">\\n        <th scope=\\\"row\\\">{{ prof.id }}</th>\\n        <td>{{ prof.nome }}</td>\\n        <td>{{ prof.sobrenome }}</td>\\n        <td>{{ prof.email }}</td>\\n        <td>{{ prof.sexo }}</td>\\n        <td>{{ prof.datacriacao | date:'dd/MM/yyyy' }}</td>\\n        <td>{{ prof.estadonome }}</td>\\n        <td>{{ prof.cidadenome }}</td>\\n        <td>{{ prof.areaformacao }}</td>\\n        <td>{{ prof.profissao }}</td>\\n        <td>\\n          <a [routerLink]=\\\"['/edit', prof.id]\\\" class=\\\"btn btn-primary\\\"> <fa name=\\\"edit\\\"></fa> Alterar</a>\\n        </td>\\n        <td>\\n          <a (click)=\\\"deleteProf(prof.id)\\\" class=\\\"btn btn-danger\\\"><fa name=\\\"minus-circle\\\"></fa> Excluir</a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","module.exports = \"\"","// index.component.ts\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent implements OnInit {\n\n  listaProf;\n\n  constructor(private apiservice: ApiService) {  }\n\n  ngOnInit() {\n\n    // INICIO CARREGANDO A LISTA DE PROFISSIONAIS VINDO DO SERVICE.METODO GET\n    this.apiservice\n      .getProfissionais()\n      .subscribe((data) => {\n      this.listaProf = data;\n    });\n  }\n\n  // REMOVE O REGISTRO DO PROFISSIONAL PELO ID, CHAMO O SERVICE.METODO DELETE\n  deleteProf(id) {\n    this.apiservice.deleteProfissional(id).subscribe(res => {\n      window.location.reload();\n    });\n  }\n\n}\n","module.exports = \"<!-- search.component.html -->\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\" for=\\\"nome\\\">Nome:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"nomeFilter.nome\\\" name=\\\"nome\\\" placeholder=\\\"Digite o Nome\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\" for=\\\"selProf\\\">Profissão:</label>\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"selProf\\\" name=\\\"selProf\\\">\\n              <option value=\\\"\\\">Todas Profissões</option>\\n            <option *ngFor=\\\"let itemProf of listaProfTotal\\\" value=\\\"{{itemProf.profissao}}\\\">{{itemProf.profissao}}</option>\\n          </select>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"table-responsive table-hover\\\">\\n<table class=\\\"table\\\" width=\\\"100%\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">ID</th>\\n      <th scope=\\\"col\\\">Nome</th>\\n      <th scope=\\\"col\\\">Sobrenome</th>\\n      <th scope=\\\"col\\\">Email</th>\\n      <th scope=\\\"col\\\">Sexo</th>\\n      <th scope=\\\"col\\\">Data</th>\\n      <th scope=\\\"col\\\">Estado</th>\\n      <th scope=\\\"col\\\">Cidade</th>\\n      <th scope=\\\"col\\\">Área de Formação</th>\\n      <th scope=\\\"col\\\">Profissão</th>\\n      <th scope=\\\"col\\\" colspan=\\\"2\\\">Ações</th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let item of listaProf | filterBy: nomeFilter | filterByProf: selProf\\\">\\n      <th scope=\\\"row\\\">{{ item.id }}</th>\\n      <td>{{ item.nome }}</td>\\n      <td>{{ item.sobrenome }}</td>\\n      <td>{{ item.email }}</td>\\n      <td>{{ item.sexo }}</td>\\n      <td>{{ item.datacriacao | date:'dd/MM/yyyy' }}</td>\\n      <td>{{ item.estadonome }}</td>\\n      <td>{{ item.cidadenome }}</td>\\n      <td>{{ item.areaformacao }}</td>\\n      <td>{{ item.profissao }}</td>\\n      <td>\\n        <a [routerLink]=\\\"['/edit', item.id, {modal: 'true'}]\\\"class=\\\"btn btn-primary\\\">\\n          <fa name=\\\"edit\\\"></fa> Alterar</a>\\n      </td>\\n      <td>\\n        <a (click)=\\\"deleteProf(item.id)\\\" class=\\\"btn btn-danger\\\">\\n          <fa name=\\\"minus-circle\\\"></fa> Excluir</a>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n<p class=\\\"center\\\" *ngIf=\\\"(listaProf | filterBy: nomeFilter).length === 0 || (listaProf | filterByProf: selProf).length === 0 \\\"><span><strong>Não foram encontrados resultados.</strong></span></p>\\n</div>\\n\"","module.exports = \"\"","// search.component.ts\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { ApiService } from '../../services/api.service';\n\nimport { FilterPipe } from 'ngx-filter-pipe';\nimport { FilterByProfPipe } from '../../pipes/filter-by-prof.pipe';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  listaProf: any = [];\n  nomeFilter: any = { nome: null };\n  selProf: any;\n  listaProfTotal: any = [\n      {\n        id: 1,\n        profissao: 'Advogado'\n      },\n      {\n        id: 2,\n        profissao: 'Bombeiro'\n      },\n      {\n        id: 3,\n        profissao: 'Médico'\n      },\n      {\n        id: 4,\n        profissao: 'Programador'\n      },\n      {\n        id: 5,\n        profissao: 'Zelador'\n      }\n    ];\n\n  constructor(private apiservice: ApiService, private filterPipe: FilterPipe) {  }\n\n  ngOnInit() {\n\n    // INICIO CARREGANDO A LISTA DE PROFISSIONAIS VINDO DO SERVICE.METODO GET\n    this.apiservice\n      .getProfissionais()\n      .subscribe((data) => {\n      this.listaProf = data;\n    });\n  }\n\n  // FECHA A MODAL FAZENDO O RELOAD NA TELA\n  closeModal() {\n    window.location.reload();\n  }\n\n  // REMOVE O REGISTRO DO PROFISSIONAL PELO ID, CHAMO O SERVICE.METODO DELETE\n  deleteProf(id) {\n    this.apiservice.deleteProfissional(id).subscribe(res => {\n      window.location.reload();\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterByProf'\n})\nexport class FilterByProfPipe implements PipeTransform {\n\n  // AQUI FAZ O FILTRO CONFORME A PROFISSÃO SELECIONADA\n  transform(items: any, selProf?: any): any {\n    return selProf ? items.filter(sal => sal.profissao === selProf) : items;\n}\n\n}\n","// api.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // URL DA MINHA API LOCALHOST\n  uri = 'http://localhost:3000/profissionais';\n  errors: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private http: HttpClient) { }\n\n  // GET - SELECIONA LISTA DE PROFISSIONAIS CADASTRADOS\n  getProfissionais() {\n    return this.http.get(`${this.uri}`);\n  }\n\n  // POST - ADICIONA PROFISSIONAL\n  addProfissional(nome, sobrenome, email, sexo, datacriacao, estadoid, estadonome, cidadeid, cidadenome, areaformacao, profissao) {\n    const obj = {\n      nome: nome,\n      sobrenome: sobrenome,\n      email: email,\n      sexo: sexo,\n      datacriacao: datacriacao,\n      estadoid: estadoid,\n      estadonome: estadonome,\n      cidadeid: cidadeid,\n      cidadenome: cidadenome,\n      areaformacao: areaformacao,\n      profissao: profissao\n    };\n\n    this.http.post(this.uri, obj)\n    .subscribe(\n      result => {\n      },\n      error => {\n        this.errors = error;\n      },\n      () => {\n        this.router.navigate(['index']);\n      }\n    );\n  }\n\n  // ACESSA O REGISTRO A SER EDITADO CONFORME ID\n  editProfissional(id) {\n    return this\n              .http\n              .get(`${this.uri}/${id}`);\n    }\n\n    // PUT - FAZ O UPDATE DOS DADOS DO PROFISSIONAL CONFORME ID\n    updateProfissional(nome, sobrenome, email, sexo, datacriacao, estadoid, estadonome, cidadeid, cidadenome, areaformacao, profissao, id) {\n\n      const obj = {\n        nome: nome,\n        sobrenome: sobrenome,\n        email: email,\n        sexo: sexo,\n        datacriacao: datacriacao,\n        estadoid: estadoid,\n        estadonome: estadonome,\n        cidadeid: cidadeid,\n        cidadenome: cidadenome,\n        areaformacao: areaformacao,\n        profissao: profissao\n      };\n\n      this\n        .http\n        .put(`${this.uri}/${id}`, obj)\n        .subscribe(\n          result => {\n          },\n          error => {\n            this.errors = error;\n          },\n          () => {\n            this.router.navigate(['index']);\n          }\n        );\n    }\n\n    // DELETE - PARA DELETAR O REGISTRO CONFORME O ID\n    deleteProfissional(id) {\n      return this\n                .http\n                .delete(`${this.uri}/${id}`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}